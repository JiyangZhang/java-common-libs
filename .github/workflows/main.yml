name: java-common-libs Main

on:
  push:
    branches:
      - develop

jobs:
  build:
    name: Build java-common-libs
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '10'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '8'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Maven Build (skip tests)
        run: mvn -T 2 clean install -DskipTests
      - name: Maven Validate
        run: mvn validate
  test:
    name: Test java-common-libs
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        mongodb: ["4.2"]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '10'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '8'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Start MongoDB v${{ matrix.mongodb }}
        uses: supercharge/mongodb-github-action@1.2.0
        with:
          mongodb-version: ${{ matrix.mongodb }}
          mongodb-replica-set: rs-test
      - name: Build with Maven
        run: mvn -T 2 clean install
  deploy:
    name: Deploy java-common-libs libs and Java docs
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '10'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '8'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
#      - name: Build with Maven CLI
#        run: mvn -T 2 clean install -DskipTests
      - name: Deploy to Maven Central respository
        uses: samuelmeuli/action-maven-publish@v1
        with:
          nexus_username: ${{ secrets.MAVEN_NEXUS_USER }}
          nexus_password: ${{ secrets.MAVEN_NEXUS_PASSWORD }}
          gpg_private_key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          maven_args: -DskipTests
