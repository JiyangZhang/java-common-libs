name: Release new java-common-libs version

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build java-common-libs
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '10'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '8'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Maven Build (skip tests)
        run: mvn -T 2 clean install -DskipTests
      - name: Maven Validate
        run: mvn validate
  test:
    name: Test java-common-libs
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        mongodb: ["4.2"]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '10'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '8'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Start MongoDB v${{ matrix.mongodb }}
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: ${{ matrix.mongodb }}
          mongodb-replica-set: rs-test
      - name: Run Maven Tests
        run: mvn -T 2 clean install -DskipTests
  deploy:
    name: Deploy java-common-libs to Maven
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '10'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '8'
          server-id: ossrh                          # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_NEXUS_USER         # env variable for username in deploy
          server-password: MAVEN_NEXUS_PASSWORD     # env variable for token in deploy
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE      # env variable for GPG private key passphrase
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Deploy to Maven Central respository
        run: mvn clean deploy -DskipTests -P deploy
        env:
          MAVEN_NEXUS_USER: ${{ secrets.MAVEN_NEXUS_USER }}
          MAVEN_NEXUS_PASSWORD: ${{ secrets.MAVEN_NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
  release:
    name: GitHub Release
    runs-on: ubuntu-20.04
    needs: deploy
    steps:
      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ github.ref }}
          tag_name: ${{ github.ref }}
          generate_release_notes: true